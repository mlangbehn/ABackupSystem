#! /bin/bash

#    Copyright (C) 2013-2017  Matthew Langbehn
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

################################################################################
#                                                                              #
#                       Simple weekly Backup Script                            #
#                                                                              #
################################################################################

#---------------------------- Read Conf File ---------------------------------#
source /etc/backup/backup.conf

#----------------------------- Backup Name -----------------------------------#
BACKUP_THIS_WEEK=Weekly-$($DATE +%V);
BACKUP_LAST_MONTH=*-$(( $($DATE +%V) - 4 ));
BACKUP_SUNDAY=*Sunday;

#---------------------------- Body of Script ---------------------------------#

# Ensure user is root
if (( `$ID -u` != 0 )); then
    $ECHO "$0 must be run as root.";
    exit;
fi;

# Remove month-old backup, if one exists
if [ -d $MOUNT_POINT/$BACKUP_LAST_MONTH ] ; then
    $RM -rf $MOUNT_POINT/$BACKUP_LAST_MONTH ;
fi;

# Create directory for backup
$MKDIR $MOUNT_POINT/$BACKUP_THIS_WEEK ;

# Make a hard-link to Sunday's backup, if one exists
# If no backup for Sunday exists, rsync the system to this week's backup
if [ -d $MOUNT_POINT/$BACKUP_SUNDAY ] ; then
    $CP -al $MOUNT_POINT/$BACKUP_SUNDAY/* $MOUNT_POINT/$BACKUP_THIS_WEEK ;
else
    for i in $FILE_SYSTEMS
    do
        $RSYNC                                       \
            -xav --delete                            \
            $i $MOUNT_POINT/$BACKUP_THIS_WEEK ;
    done
fi;
